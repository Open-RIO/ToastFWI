namespace Toast::Memory::Shared::IO

enum MotorInterface {
    PWM = 1, CAN
}

enum MotorType {
    Talon = 0x01, TalonSRX, CANTalon
    Victor = 0x10, VictorSP
    SD540 = 0x20
    Spark = 0x30
}

block Motor {
    bool        init, bootstrap
    u8          port
    MotorType       type
    MotorInterface  interface
    float      value
}

# This isn't quite done yet
block MotorSRXExtended {
    bool        lim_fwd_closed, lim_fwd_ok
    bool        lim_rvs_closed, lim_rvs_ok
    float       p, i, d, f
    bool        pid_pending

    float       bus_voltage, output_voltage, output_current, temperature
    double      position, speed
    
    int         enc_position, enc_velocity
    int         analog_in, analog_in_raw, analog_in_vel
    int         quad_a, quad_b, quad_idx, quad_idx_rises

    int         pulse_width_position, pulse_width_vel
    int         pulse_width_rtf, pulse_width_rtr

    bool        quad_idx_rises_pending, pulse_width_position_pending

    u16         faults, faults_sticky
    bool        clear_sticky_pending
    
    u32         firmware_version
}

block Servo {
    bool        init, bootstrap
    bool        offline, offline_pending
    bool        update_pending
    float       value
}

block ServoStatic {
    float       max_angle, min_angle, angle_range
}

block PWM {
    bool        init, bootstrap
    u8          period_multiplier
    bool        period_mult_pending, raw_pending, position_pending, speed_pending, bounds_pending
    bool        zero_latch, deadband_elimination, deadband_elimination_pending

    u16         raw
    float       position, speed

    double      bounds_max, bounds_min, bounds_deadband_max, bounds_deadband_min, bounds_center
    bool        bounds_int32        // False for floating point, if true, casting required
}